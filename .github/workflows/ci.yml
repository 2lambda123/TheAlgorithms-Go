# https://github.com/golangci/golangci-lint
name: Continuous Integration
on:
  push:
    # prevent duplication of tests with
    # `pull_request` event
    branches:
      - master
  pull_request:

jobs:
  golang_lint_and_test:
    name: Code style and tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: '^1.18'
      - name: Run Golang CI Lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          args: -E gofmt
      - name: Run tests
        run: go test ./...
  golang_test:
    name: Code tests
    strategy:
      matrix:
        go: [1.19]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        id: checkout

      - name: Setup go environemnt
        uses: actions/setup-go@v3
        id: setup
        with: 
          go-version: ${{ matrix.go }}

      - run: go version

      - name: Setup gotestfmt
        uses: haveyoudebuggedit/gotestfmt-action@v2
        id: testfmt
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Run go tests
        id: test
        run: |
          set -euo pipefail
          go test -json -v ./... 2>&1 | tee /tmp/gotest.log | gotestfmt

      - name: Upload test info as artifact
        uses: actions/upload-artifact@v3
        id: artifact-upload
        if: always()
        with: 
          path: /tmp/gotest.log
          if-no-files-found: error

  golang_coverage:
    name: Code coverage
    strategy:
      matrix:
        go: [1.19]
        os: [ubuntu-latest]
      fail-fast: false
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        id: checkout
        with:
          fetch-depth: 10

      - name: Setup go environemnt
        uses: actions/setup-go@v3
        id: setup
        with: 
          go-version: ${{ matrix.go }}

      - run: go version
          
      - name: Generate coverage doc
        uses: gwatts/go-coverage-action@v1
        id: coverage
        with:
          coverage-threshold: 85
      
      - name: Upload coverage doc as artifact
        uses: actions/upload-artifact@v3
        id: artifact-upload
        if: always()
        with: 
          path: ${{ steps.coverage.outputs.report-pathname }}
          if-no-files-found: error
  
  codespell:
    name: Check for spelling errors
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: codespell-project/actions-codespell@master
        with:
          ignore_words_list: "actualy,nwe"
          skip: "go.mod,go.sum"
